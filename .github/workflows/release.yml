name: Release Build

on:
  push:
    tags:
      - 'v*'

jobs:
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.1'
        channel: 'stable'
        
    - name: Flutter version
      run: flutter --version
      
    - name: Disable Flutter analytics
      run: flutter config --no-analytics
      
    - name: Install dependencies
      run: flutter pub get
      
    - name: Analyze code
      run: flutter analyze
      
    - name: Run tests
      run: flutter test
      
    - name: Setup Android signing
      run: |
        echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 -d > android/app/upload-keystore.jks
        echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/key.properties
        echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
        echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
        echo "storeFile=upload-keystore.jks" >> android/key.properties
        
    - name: Build Android App Bundle
      run: flutter build appbundle --release
      
    - name: Build Android APK
      run: flutter build apk --release
      
    - name: Upload Android artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-builds
        path: |
          build/app/outputs/bundle/release/app-release.aab
          build/app/outputs/flutter-apk/app-release.apk
          
  build-macos:
    name: Build macOS
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.1'
        channel: 'stable'
        
    - name: Flutter version
      run: flutter --version
      
    - name: Disable Flutter analytics
      run: flutter config --no-analytics
      
    - name: Install dependencies
      run: flutter pub get
      
    - name: Enable macOS desktop
      run: flutter config --enable-macos-desktop
      
    - name: Build macOS app
      run: flutter build macos --release
      
    - name: List macOS build output
      run: ls -la build/macos/Build/Products/Release/
      
    - name: Create macOS archive
      run: |
        cd build/macos/Build/Products/Release
        tar -czf tunio-spot-macos.tar.gz "Tunio Spot.app"
        
    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-builds
        path: build/macos/Build/Products/Release/tunio-spot-macos.tar.gz
        
  build-windows-x64:
    name: Build Windows x64
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.1'
        channel: 'stable'
        
    - name: Flutter version
      run: flutter --version
      
    - name: Disable Flutter analytics
      run: flutter config --no-analytics
      
    - name: Install dependencies
      run: flutter pub get
      
    - name: Enable Windows desktop
      run: flutter config --enable-windows-desktop
      
    - name: Build Windows x64 app
      run: flutter build windows --release
      
    - name: List Windows x64 build output
      run: |
        dir build\windows\x64\runner\Release
      shell: cmd
      
    - name: Create Windows x64 archive
      run: |
        cd build/windows/x64/runner/Release
        Compress-Archive -Path * -DestinationPath tunio-spot-windows-x64.zip
      shell: powershell
        
    - name: Upload Windows x64 artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-x64-builds
        path: build/windows/x64/runner/Release/tunio-spot-windows-x64.zip
        
  create-release:
    name: Create Release
    needs: [build-android, build-macos, build-windows-x64]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Check prerequisite jobs
      run: |
        echo "All prerequisite jobs should have completed successfully"
        echo "build-android: ${{ needs.build-android.result }}"
        echo "build-macos: ${{ needs.build-macos.result }}"
        echo "build-windows-x64: ${{ needs.build-windows-x64.result }}"
      
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Download Android artifacts
      uses: actions/download-artifact@v4
      with:
        name: android-builds
        path: ./android-builds
        
    - name: Debug Android artifacts
      run: |
        echo "Checking android-builds directory:"
        ls -la ./android-builds/ || echo "android-builds directory not found"
        echo "Checking for APK file:"
        ls -la ./android-builds/flutter-apk/app-release.apk || echo "APK file not found"
        echo "Checking for AAB file:"
        ls -la ./android-builds/bundle/release/app-release.aab || echo "AAB file not found"
        echo "All files in android-builds:"
        find ./android-builds -type f || echo "No files found"
        
    - name: Download macOS artifacts
      uses: actions/download-artifact@v4
      with:
        name: macos-builds
        path: ./macos-builds
        
    - name: Download Windows x64 artifacts
      uses: actions/download-artifact@v4
      with:
        name: windows-x64-builds
        path: ./windows-x64-builds
        
        
    - name: Debug all artifacts
      run: |
        echo "All downloaded artifacts:"
        ls -la ./ || echo "No artifacts found"
        echo "macOS artifacts:"
        ls -la ./macos-builds/ || echo "macOS artifacts not found"
        echo "Windows x64 artifacts:"
        ls -la ./windows-x64-builds/ || echo "Windows x64 artifacts not found"
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        name: Release ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## What's new in version ${{ steps.get_version.outputs.VERSION }}
          
          ### Download files:
          - **app-release.aab** - Android App Bundle for Google Play upload
          - **app-release.apk** - APK file for Android testing
          - **tunio-spot-macos.tar.gz** - macOS application
          - **tunio-spot-windows-x64.zip** - Windows application (64-bit)
          
          ### Installation instructions:
          
          #### Android:
          - For regular installation: download APK and install
          - For Google Play publishing: use AAB file
          
          #### macOS:
          - Extract archive and move application to Applications folder
          
          #### Windows:
          - Extract ZIP archive and run tunio_spot.exe
          - Requires 64-bit Windows system
          
          ---
          
          Project automatically built via GitHub Actions
        files: |
          ./android-builds/bundle/release/app-release.aab
          ./android-builds/flutter-apk/app-release.apk
          ./macos-builds/tunio-spot-macos.tar.gz
          ./windows-x64-builds/tunio-spot-windows-x64.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 